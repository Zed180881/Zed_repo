package ua.service.implementation;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import ua.entity.CommodityOrder;
import ua.entity.OrderStatus;
import ua.entity.User;
import ua.repository.OrderStatusRepository;
import ua.repository.UserRepository;
import ua.service.OrderStatusService;
import ua.service.UserService;

@Service
@Transactional
public class UserServiceImpl implements UserService {

    @Autowired
    private UserRepository userRepository;

    @Override
    public void save(User user) {
	if (userRepository.findByUserFullName(user.getFullName()) == null)
	    userRepository.save(user);
    }

    @Override
    public User findByUserFullName(String userFullName) {
	return userRepository.findByUserFullName(userFullName);
    }

    @Override
    public void deleteByUserFullName(String userFullName) {
	if (userRepository.findByUserFullName(userFullName) != null)
	    userRepository.delete(findByUserFullName(userFullName));
    }

    @Override
    public List<User> findAll() {
	return userRepository.findAll();
    }

    @Override
    public void updateUser(String userFullName, User newUser) {
	if (userRepository.findByUserFullName(userFullName) != null) {
	    if (newUser.getFullName() != null)
		userRepository.findByUserFullName(userFullName).setFullName(
			newUser.getFullName());
	    if (newUser.getLogin() != null)
		userRepository.findByUserFullName(userFullName).setLogin(
			newUser.getLogin());
	    if (newUser.getPassword() != null)
		userRepository.findByUserFullName(userFullName).setPassword(
			newUser.getPassword());
	    if (newUser.getMail() != null)
		userRepository.findByUserFullName(userFullName).setMail(
			newUser.getMail());
	    if (newUser.getPhone() != null)
		userRepository.findByUserFullName(userFullName).setPhone(
			newUser.getPhone());
	    if (newUser.getAddress() != null)
		userRepository.findByUserFullName(userFullName).setAddress(
			newUser.getAddress());
	}

    }

    @Override
    public List<CommodityOrder> findCommodityOrdersByOrderStatus(
	    String orderStatusName) {
	return orderStatusRepository.findByOrderStatusName(orderStatusName)
		.getCommodityOrders();
    }

}
