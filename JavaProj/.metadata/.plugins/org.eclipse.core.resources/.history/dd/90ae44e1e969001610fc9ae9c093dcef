package ua.service.implementation.validators;

import org.springframework.validation.Errors;
import org.springframework.validation.ValidationUtils;
import org.springframework.validation.Validator;

import ua.entity.Producer;
import ua.service.ProducerService;

public class ProducerValidator implements Validator {

    private final ProducerService producerService;

    public ProducerValidator(ProducerService producerService) {
	this.producerService = producerService;
    }

    @Override
    public boolean supports(Class<?> arg0) {
	return Producer.class.isAssignableFrom(arg0);
    }

    @Override
    public void validate(Object object, Errors errors) {
	Producer producer = (Producer) object;
	ValidationUtils.rejectIfEmptyOrWhitespace(errors, "producerName", "",
		"Назва виробника не може бути порожньою!");
	if (!producer.getProducerName().matches("[a-zA-Z а-яієїА-ЯІЇЄ]+"))
	    errors.rejectValue("producerName", "",
		    "Недопустимы символи в назві виробника");
	if (producerService.findByProducerName(producer.getProducerName()) != null
		&& producerService.findByProducerName(
			producer.getProducerName()).getId() != producer.getId())
	    errors.rejectValue("producerName", "",
		    "Такий виробник вже є в базі");
    }

}
