package lesson3;

import java.util.Scanner;

//потрібно написати програму яка буде запитувати користувача скільки йому років, 
//в скільки він хоче вийти на пенсію, скільки він може відкладати грошей в рік і 
//банківську ставку на депозит або впишіть цю ставку самостійно в районі 19 відсотків. 
//Після цього програма повинна створити масив розміром стільки скільки років 
//залишилось до пенсії, і в кожен елемент в масиві з починаючи з 0-го заповнити 
//відкладеними грошима + ставка в грошовому еквіваленті, відсотки мають також 
//капіталізуватися, тобто кожен наступний рік рахується по принципу вклад + відсотки
//(ставка) + та що в рік відклав і це все знову під відсотки до наступного року. 
//В результаті має бути виведений масив в стовпчик з ліва вік користувача з права 
//сума накопичень.

public class Task11 {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);

		int age = read("Скільки Вам років?", sc);
		int pension = read("В якому віці Ви б хотіли вийти на пенсію?", sc);
		int savings = read("Яку суму коштів Ви можете відкладати щороку?", sc);
		int percent = read(
				"Під скільки відсотків Ви б хотіли вкласти гроші в банк?", sc);

		sc.close();

		double[] depoArray = new double[pension - age];
		calculate(depoArray, savings, percent);
		printResults(depoArray, age);
	}

	private static void printResults(double[] depoArray, int age) {
		System.out.println("Розрахунок накопичень:");
		for (int i = 0; i < depoArray.length; i++)
			System.out.println("Ваш вік: " + (age + 1 + i)
					+ " років. Ваші заощадження: " + depoArray[i] + " грн.");

	}

	private static void calculate(double[] depoArray, int savings, int percent) {
		depoArray[0] = (double) savings
				* ((double) (100 + percent) / (double) 100);
		for (int i = 1; i < depoArray.length; i++)
			depoArray[i] = (double) (depoArray[i - 1] + savings)
					* (double) (100 + percent) / (double) 100;
	}

	public static int read(String question, Scanner sc) {

		System.out.println(question);
		if (sc.hasNextInt())
			return sc.nextInt();
		return 0;
	}
}
