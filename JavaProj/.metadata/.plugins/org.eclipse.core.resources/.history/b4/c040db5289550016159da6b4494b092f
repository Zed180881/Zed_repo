package ua.controller;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.springframework.context.ConfigurableApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

import ua.entity.Category;
import ua.entity.Commodity;
import ua.entity.CommodityStatus;
import ua.entity.Producer;
import ua.service.CategoryService;
import ua.service.CommodityStatusService;
import ua.service.OrderStatusService;
import ua.service.ProducerService;

public class Main {

    static BufferedReader br = new BufferedReader(new InputStreamReader(
	    System.in));

    static ConfigurableApplicationContext context = new ClassPathXmlApplicationContext(
	    "/META-INF/applicationContext.xml");
    static CategoryService categoryService = context
	    .getBean(CategoryService.class);
    static ProducerService producerService = context
	    .getBean(ProducerService.class);
    static CommodityStatusService commodityStatusService = context
	    .getBean(CommodityStatusService.class);
    static OrderStatusService orderStatusService = context
	    .getBean(OrderStatusService.class);

    public static void main(String[] args) throws IOException {
	boolean isRun = true;

	while (isRun) {
	    boolean isRunInternal = true;
	    System.out.println("Виберіть операцію:");
	    System.out.println("1. Робота з категоріями товарів");
	    System.out.println("2. Робота з виробниками товарів");
	    System.out.println("3. Робота з статусами товарів");
	    System.out.println("4. Робота з користувачами");
	    System.out.println("5. Робота з ордерами");
	    System.out.println("6. Робота з статусами ордерів");
	    System.out.println("7. Робота з товарами");
	    System.out.println("0. Вихід");
	    String choice = br.readLine();
	    switch (choice) {
	    case "1":
		while (isRunInternal) {
		    System.out.println("Категорії товарів. Виберіть операцію:");
		    System.out.println("1. Показати наявні категорії");
		    System.out.println("2. Додати категорію");
		    System.out.println("3. Показати товари по категорії");
		    System.out.println("4. Змінити категорію");
		    System.out.println("5. Видалити категорію");
		    System.out.println("0. Вихід в головне меню");
		    choice = br.readLine();
		    switch (choice) {
		    case "1":
			System.out
				.println("Зараз в базі є наступні категорії товарів:");
			for (Category category : categoryService.findAll())
			    System.out.println(category.getId() + " "
				    + category.getCategoryName());
			break;
		    case "2":
			System.out
				.println("Введіть назву категорії для додавання");
			categoryService.save(br.readLine());
			break;
		    case "3":
			System.out
				.println("Введіть назву категорії для пошуку товарів:");
			for (Commodity commodity : categoryService
				.findCommoditiesByCategory(br.readLine()))
			    System.out.println(commodity.getId() + " "
				    + commodity.getModel() + " "
				    + commodity.getPrice() + " "
				    + commodity.getQuantity() + " "
				    + commodity.getWarranty() + " "
				    + commodity.getCategory() + " "
				    + commodity.getCommodityStatus() + " "
				    + commodity.getProducer());
			break;
		    case "4":
			System.out
				.println("Введіть назву категорії для зміни:");
			String oldName = br.readLine();
			System.out.println("Введіть нову назву категорії:");
			String newName = br.readLine();
			categoryService.updateCategory(oldName, newName);
			break;
		    case "5":
			System.out
				.println("Введіть назву категорії для видалення:");
			categoryService.deleteByCategoryName(br.readLine());
			break;
		    case "0":
			isRunInternal = false;
			break;
		    }
		}
		break;
	    case "2":
		while (isRunInternal) {
		    System.out.println("Виробники товарів. Виберіть операцію:");
		    System.out.println("1. Показати наявних виробників");
		    System.out.println("2. Додати виробника");
		    System.out.println("3. Показати товари по виробнику");
		    System.out.println("4. Змінити виробника");
		    System.out.println("5. Видалити виробника");
		    System.out.println("0. Вихід в головне меню");
		    choice = br.readLine();
		    switch (choice) {
		    case "1":
			System.out
				.println("Зараз в базі є наступні виробники товарів:");
			for (Producer producer : producerService.findAll())
			    System.out.println(producer.getId() + " "
				    + producer.getProducerName());
			break;
		    case "2":
			System.out
				.println("Введіть назву виробника для додавання");
			producerService.save(br.readLine());
			break;
		    case "3":
			System.out
				.println("Введіть назву виробника для пошуку товарів:");
			for (Commodity commodity : producerService
				.findCommoditiesByProducer(br.readLine()))
			    System.out.println(commodity.getId() + " "
				    + commodity.getModel() + " "
				    + commodity.getPrice() + " "
				    + commodity.getQuantity() + " "
				    + commodity.getWarranty() + " "
				    + commodity.getCategory() + " "
				    + commodity.getCommodityStatus() + " "
				    + commodity.getProducer());
			break;
		    case "4":
			System.out
				.println("Введіть назву виробника для зміни:");
			String oldName = br.readLine();
			System.out.println("Введіть нову назву виробника:");
			String newName = br.readLine();
			producerService.updateProducer(oldName, newName);
			break;
		    case "5":
			System.out
				.println("Введіть назву виробника для видалення:");
			producerService.deleteByProducerName(br.readLine());
			break;
		    case "0":
			isRunInternal = false;
			break;
		    }
		}
		break;
	    case "3":
		while (isRunInternal) {
		    System.out.println("Статуси товарів. Виберіть операцію:");
		    System.out.println("1. Показати наявні статуси товарів");
		    System.out.println("2. Додати статус товару");
		    System.out.println("3. Показати товари по статусу");
		    System.out.println("4. Змінити статус товару");
		    System.out.println("5. Видалити статус");
		    System.out.println("0. Вихід в головне меню");
		    choice = br.readLine();
		    switch (choice) {
		    case "1":
			System.out
				.println("Зараз в базі є наступні статуси товарів:");
			for (CommodityStatus commodityStatus : commodityStatusService
				.findAll())
			    System.out.println(commodityStatus.getId() + " "
				    + commodityStatus.getCommodityStatusName());
			break;
		    case "2":
			System.out
				.println("Введіть назву статусу для додавання");
			commodityStatusService.save(br.readLine());
			break;
		    case "3":
			System.out
				.println("Введіть назву статусу для пошуку товарів:");
			for (Commodity commodity : commodityStatusService
				.findCommoditiesByCommodityStatus(br.readLine()))
			    System.out.println(commodity.getId() + " "
				    + commodity.getModel() + " "
				    + commodity.getPrice() + " "
				    + commodity.getQuantity() + " "
				    + commodity.getWarranty() + " "
				    + commodity.getCategory() + " "
				    + commodity.getCommodityStatus() + " "
				    + commodity.getProducer());
			break;
		    case "4":
			System.out.println("Введіть назву статусу для зміни:");
			String oldName = br.readLine();
			System.out.println("Введіть нову назву статусу:");
			String newName = br.readLine();
			commodityStatusService.updateCommodityStatus(oldName,
				newName);
			break;
		    case "5":
			System.out
				.println("Введіть назву статусу для видалення:");
			commodityStatusService.deleteByCommodityStatusName(br
				.readLine());
			break;
		    case "0":
			isRunInternal = false;
			break;
		    }
		}
		break;
	    case "6":
		while (isRunInternal) {
		    System.out.println("Статуси ордерів. Виберіть операцію:");
		    System.out.println("1. Показати наявні статуси ордерів");
		    System.out.println("2. Додати статус ордерів");
		    System.out.println("3. Показати ордери по статусу");
		    System.out.println("4. Змінити статус ордеру");
		    System.out.println("5. Видалити статус");
		    System.out.println("0. Вихід в головне меню");
		    choice = br.readLine();
		    switch (choice) {
		    case "1":
			System.out
				.println("Зараз в базі є наступні статуси ордерів:");
			for (CommodityStatus commodityStatus : commodityStatusService
				.findAll())
			    System.out.println(commodityStatus.getId() + " "
				    + commodityStatus.getCommodityStatusName());
			break;
		    case "2":
			System.out
				.println("Введіть назву статусу для додавання");
			commodityStatusService.save(br.readLine());
			break;
		    case "3":
			System.out
				.println("Введіть назву статусу для пошуку ордерів:");
			for (Commodity commodity : commodityStatusService
				.findCommoditiesByCommodityStatus(br.readLine()))
			    System.out.println(commodity.getId() + " "
				    + commodity.getModel() + " "
				    + commodity.getPrice() + " "
				    + commodity.getQuantity() + " "
				    + commodity.getWarranty() + " "
				    + commodity.getCategory() + " "
				    + commodity.getCommodityStatus() + " "
				    + commodity.getProducer());
			break;
		    case "4":
			System.out.println("Введіть назву статусу для зміни:");
			String oldName = br.readLine();
			System.out.println("Введіть нову назву статусу:");
			String newName = br.readLine();
			commodityStatusService.updateCommodityStatus(oldName,
				newName);
			break;
		    case "5":
			System.out
				.println("Введіть назву статусу для видалення:");
			commodityStatusService.deleteByCommodityStatusName(br
				.readLine());
			break;
		    case "0":
			isRunInternal = false;
			break;
		    }
		}
		break;
	    case "0":
		isRun = false;
		break;
	    }
	}
	context.close();

    }

}
