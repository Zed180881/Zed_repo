package lesson12Dz;

/*Створити потік. Створити клас MyThread наслідувати
 його від класу Thread. Перевизначити метод run(), так щоб можна було
 вивести введену з консолі кількість чисел Фібоначі. Для цього
 використовуємо в методі run() клас Scanner. Тобто ми вводимо з консолі
 скільки ми хочемо бачити чисел Фібоначі і ми їх виводимо з затримкою в
 1 секунду.
 Створити потік. Створити клас RunnableThread імплементувати його від
 інтерфейсу Runnable. Метод run() перевизначити таким чином, щоб числа
 Фібоначі виводились в зворотньому порядку. Тобто Спершу ввели через
 Scanner скільки ми хочемо бачити чисел Фібоначі, потім з затримкою в 1
 секунду вивести їх від останнього до першого значення.
 Перший і другий потоки повинні виводити в один рядок числа.
 Вигляд на консолі :
 Потік Thread : 1 1 2 3 5 . . .
 Потік Runnable: . . .5 3 2 1 1
 Запустити декілька потоків у ExecutorService.

 Покриття не важливо.*/

import java.util.Scanner;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import org.junit.Test;

public class ExecutorTest {

    @Test
    public void executorTest() {
	System.out.println("Enter count of Fibonacci number you need:");
	Scanner sc = new Scanner(System.in);
	int count = sc.nextInt();
	sc.close();
	ExecutorService service = Executors.newFixedThreadPool(1);
	service.submit(new MyThread(count));
	service.submit(new RunnableThread(count));
	service.shutdown();
    }

}
