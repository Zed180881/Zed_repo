package lesson4;

import java.util.Scanner;

public class TicTacToe {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int[][] battle = new int[3][3];
		boolean isRun = true;
		while (isRun) {
			cpuShot(battle);
			print(battle);
			userShot(battle, sc);
			print(battle);
			isRun = isSomeOneWin(battle);
			if (!isRun) {
				System.out.println("Winner");
			}
		}
		sc.close();
	}

//	static boolean isSomeOneWin(int[][] battle) {
//		if (battle[0][0] > 0 && battle[0][1] > 0 && battle[0][2] > 0) {
//			return false;
//		} else if (battle[1][0] > 0 && battle[1][1] > 0 && battle[1][2] > 0) {
//			return false;
//		} else if (battle[2][0] > 0 && battle[2][1] > 0 && battle[2][2] > 0) {
//			return false;
//		} else if (battle[0][0] > 0 && battle[1][0] > 0 && battle[2][0] > 0) {
//			return false;
//		} else if (battle[0][1] > 0 && battle[1][1] > 0 && battle[2][1] > 0) {
//			return false;
//		} else if (battle[0][2] > 0 && battle[1][2] > 0 && battle[2][2] > 0) {
//			return false;
//		} else if (battle[0][0] > 0 && battle[1][1] > 0 && battle[2][2] > 0) {
//			return false;
//		} else if (battle[2][0] > 0 && battle[1][1] > 0 && battle[0][2] > 0) {
//			return false;
//		}
//		return isAllFieldFull(battle);
//	}
	static boolean isSomeOneWin(int[][] battle) {
		
		if (!squares[0][0].getLabel().equals("") &&
		squares[0][0].getLabel().equals(squares[0][1].getLabel()) &&
		squares[0][0].getLabel().equals(squares[0][2].getLabel())) {
			theWinner = squares[0][0].getLabel();
			highlightWinner(0,0,0,1,0,2);
		// Проверяем ряд 2 – элементы массива 3,4,5
		} else if (!squares[1][0].getLabel().equals("") &&
		squares[1][0].getLabel().equals(squares[1][1].getLabel()) &&
		squares[1][0].getLabel().equals(squares[1][2].getLabel())) {
			theWinner = squares[1][0].getLabel();
			highlightWinner(1,0,1,1,1,2);
		// Проверяем ряд 3 – элементы массива 6,7,8
		} else if ( ! squares[2][0].getLabel().equals("") &&
		squares[2][0].getLabel().equals(squares[2][1].getLabel()) &&
		squares[2][0].getLabel().equals(squares[2][2].getLabel())) {
			theWinner = squares[2][0].getLabel();
			highlightWinner(2,0,2,1,2,2);
		// Проверяем колонку 1 – элементы массива 0,3,6
		} else if ( ! squares[0][0].getLabel().equals("") &&
		squares[0][0].getLabel().equals(squares[1][0].getLabel()) &&
		squares[0][0].getLabel().equals(squares[2][0].getLabel())) {
			theWinner = squares[0][0].getLabel();
			highlightWinner(0,0,1,0,2,0);
		// Проверяем колонку 2 – элементы массива 1,4,7
		} else if ( ! squares[0][1].getLabel().equals("") &&
		squares[0][1].getLabel().equals(squares[1][1].getLabel()) &&
		squares[0][1].getLabel().equals(squares[2][1].getLabel())) {
			theWinner = squares[0][1].getLabel();
			highlightWinner(0,1,1,1,2,1);
		// Проверяем колонку 3 – элементы массива 2,5,8
		} else if ( ! squares[0][2].getLabel().equals("") &&
		squares[0][2].getLabel().equals(squares[1][2].getLabel()) &&
		squares[0][2].getLabel().equals(squares[2][2].getLabel())) {
			theWinner = squares[0][2].getLabel();
			highlightWinner(0,2,1,2,2,2);
		// Проверяем первую диагональ – элементы массива 0,4,8
		} else if ( ! squares[0][0].getLabel().equals("") &&
		squares[0][0].getLabel().equals(squares[1][1].getLabel()) &&
		squares[0][0].getLabel().equals(squares[2][2].getLabel())) {
			theWinner = squares[0][0].getLabel();
			highlightWinner(0,0,1,1,2,2);
		// Проверяем вторую диагональ – элементы массива 2,4,6
		} else if ( ! squares[0][2].getLabel().equals("") &&
		squares[0][2].getLabel().equals(squares[1][1].getLabel()) &&
		squares[0][2].getLabel().equals(squares[2][0].getLabel())) {
			theWinner = squares[0][2].getLabel();
			highlightWinner(0,2,1,1,2,0);
		}
		return theWinner;
	}

	static boolean isAllFieldFull(int[][] battle) {
		for (int i = 0; i < battle.length; i++) {
			for (int j = 0; j < battle[i].length; j++) {
				if (battle[i][j] == 0)
					return true;
			}
		}
		return false;
	}

	static void userShot(int[][] battle, Scanner sc) {
		System.out.println("Enter from 1 to 3 by x coordinate");
		int y = read(sc) - 1;
		System.out.println("Enter from 1 to 3 by y coordinate");
		int x = read(sc) - 1;
		battle[x][y] = 2;
	}

	static void cpuShot(int[][] battle) {
		boolean isShoted = true;
		while (isShoted) {
			int x = random(0, 2);
			int y = random(0, 2);
			if (battle[x][y] == 0) {
				isShoted = false;
				battle[x][y] = 1;
			}
		}
	}

	static void print(int[][] battle) {
		System.out.println("------");
		for (int i = 0; i < battle.length; i++) {
			for (int j = 0; j < battle[i].length; j++) {
				if (battle[i][j] == 0) {
					System.out.print("  ");
				} else if (battle[i][j] == 1) {
					System.out.print("x ");
				} else {
					System.out.print("0 ");
				}
			}
			System.out.println();
		}
		System.out.println("------");
	}

	static int random(int from, int to) {
		int r = (int) Math.round(Math.random() * (to - from) + from);
		return r;
	}

	static int read(Scanner sc) {
		if (sc.hasNextInt()) {
			return sc.nextInt();
		}
		return 0;
	}
}